{"version":3,"sources":["App.model.ts","assets/bensound-dreams.mp3","assets/throw.mp3","App.service.ts","components/Tile.tsx","components/TileList.tsx","components/Controls.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","fontawesome.js","Header.tsx","Footer.tsx","index.tsx"],"names":["Keys","tileWidth","tileGap","getEmptyCells","tileList","cellMatrix","filter","cell","find","tile","row","col","addRandomTiles","tilesQuantity","curEmptyCells","randomCells","Array","fill","forEach","_el","push","Math","floor","random","length","value","key","uuidv4","appeared","reduceTileLine","line","reduce","acc","curTile","curIdx","shouldDelete","mergedTile","merged","getCollapsedTileLine","collapseDirection","size","sort","a","b","newCol","map","i","arr","newRow","getCollapsedTileList","direction","clearedTileList","from","getTileRowsToCollapse","flat","getTileColsToCollapse","Tile","enterLeaveStyles","fontSize","calculateFontSize","styles","useSpring","top","left","config","duration","height","width","div","className","style","TileList","items","keys","item","transform","enter","leave","Controls","startNewGame","toggleMusic","musicConfig","onClick","title","icon","Game","playMusicConfig","musicOn","stopMusicConfig","useState","setTileList","useSound","backgroundMusic","play","stop","sound","pause","setMusicConfig","_val","j","gamedGrid","marginBottom","marginRight","swishSound","swish","useEffect","handleKeyPress","event","code","ArrowUp","KeyUp","ArrowDown","KeyDown","ArrowRight","KeyRight","ArrowLeft","KeyLeft","collapsedList","expandedList","window","addEventListener","removeEventListener","gameWrapperStyle","padding","fade","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","faCode","faHighlighter","faVolumeMute","faGamepad","faGithub","faMusic","faStop","faCog","Header","Footer","href","target","src","alt","routing","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55ad022a.chunk.js","sourcesContent":["import { IconName } from \"@fortawesome/fontawesome-svg-core\";\n\nexport type GameSize = 2 | 4 | 5 | 6 | 10;\n\nexport interface GameProps {\n  size: GameSize\n}\nexport interface ControlsProps {\n\tstartNewGame: () => void;\n\ttoggleMusic: () => void;\n\tmusicConfig: MusicConfig;\n}\n\nexport interface MusicConfig {\n\tmusicOn: boolean;\n\ticon: IconName;\n\ttitle: string;\n}\n\nexport interface TileProps {\n\ttile: TileConfig;\n\tenterLeaveStyles: any;\n}\n\nexport interface TileConfig {\n\tkey: string;\n\trow:  number;\n\tcol:  number;\n\tvalue?:  TileValue;\n\tappeared?: boolean;\n\tmerged?: boolean;\n\tshouldDelete?: boolean;\n}\n\nexport type TileValue = 2 | 4 | 8 | 16 | 32 | 64 | 128 | 256 | 512 | 1024 | 2048;\n\nexport interface TileListProps {\n\ttileList: TileConfig[];\n}\n\nexport type CollapseDirection = 'right' | 'left' | 'up' | 'down';\n\nexport enum Keys {\n\tArrowUp = 'ArrowUp',\n\tArrowDown = 'ArrowDown',\n\tArrowLeft = 'ArrowLeft',\n\tArrowRight = 'ArrowRight',\n\tKeyUp = 'KeyW',\n\tKeyDown = 'KeyS',\n\tKeyLeft = 'KeyA',\n\tKeyRight = 'KeyD',\n}\n\nexport const defaultSize: GameSize = 6;\n\nexport const defaultTilesToAddQuantity = 2;\n\nexport const boardWidth = 450\n\nexport const tileWidth = 10*boardWidth/(11*defaultSize + 1) ;\n\nexport const tileGap = tileWidth/10;","export default __webpack_public_path__ + \"static/media/bensound-dreams.c705f4ca.mp3\";","export default __webpack_public_path__ + \"static/media/throw.1e583756.mp3\";","import { v4 as uuidv4 } from 'uuid';\nimport { TileConfig, GameSize, CollapseDirection } from './App.model';\n\n\nexport const getCellMatrix = (length: GameSize) => {\n  return Array.from({ length }).reduce<TileConfig[]>((acc, _val, i) => {\n  acc.push(...Array.from({ length }, (_el, j) => ({\n    row: i + 1,\n    col: j + 1,\n  } as TileConfig)));\n  return acc\n  }, [])\n}\n\nexport const getEmptyCells = (tileList: TileConfig[], cellMatrix: TileConfig[]) =>\n    cellMatrix.filter((cell) => !tileList.find((tile) => tile.row === cell.row && tile.col === cell.col)\n);\n\nexport const addRandomTiles = ( cellMatrix: TileConfig[], tileList: TileConfig[], tilesQuantity = 2 ) => {\n  let curEmptyCells = getEmptyCells(tileList, cellMatrix);\n  let randomCells = [] as TileConfig[];\n\n  Array(tilesQuantity).fill(0).forEach(_el => {\n    randomCells.push({ ...curEmptyCells[Math.floor(Math.random() * curEmptyCells.length)], value: 2, key: uuidv4(), appeared: true})\n    curEmptyCells = getEmptyCells([...tileList, ...randomCells], cellMatrix);\n  })\n\n  return [...tileList, ...randomCells ]\n}\n\nconst reduceTileLine = (line: TileConfig[]) => (\n  line.reduce<TileConfig[]>((acc, curTile, curIdx, line) => {\n    if (curIdx + 1 < line.length && curTile.value === line[curIdx + 1].value && !curTile.shouldDelete) {\n      const mergedTile = {\n        ...curTile,\n        key: uuidv4(),\n        value: curTile.value && (curTile.value *= 2),\n        merged: true,\n      } as TileConfig\n      curTile.shouldDelete = true;\n      line[curIdx + 1].shouldDelete = true;\n      acc.push(mergedTile, curTile)\n    } else {\n      acc.push(curTile)\n    }\n  return acc;  \n  }, [] as TileConfig[])\n);\n\nconst getCollapsedTileLine = (line: TileConfig[], collapseDirection: CollapseDirection, size: GameSize) => {\n  switch (collapseDirection) {\n    case 'right': {\n      line.sort((a, b) => b.col - a.col) // sort from more to less\n      let newCol = size;\n      return reduceTileLine(line).map((tile, i, arr) => {\n        tile.col = newCol;\n        if (arr[i + 1] && !arr[i + 1].shouldDelete) {   //tiles for deletion should have same col with new merged tile ( order [merged, shouldDelete, shouldDelete])\n          newCol -= 1;\n        } \n        return tile;\n      }).sort((a, b) => a.col - b.col);\n    }\n    case 'left': {\n      line.sort((a, b) => a.col - b.col) // sort from less to more\n      let newCol = 1;\n      return reduceTileLine(line).map((tile, i, arr) => {\n        tile.col = newCol;\n        if (arr[i + 1] && !arr[i + 1].shouldDelete) {   //tiles for deletion should have same col with new merged tile\n          newCol += 1;\n        } \n        return tile;\n      });\n    }\n    case 'up': {\n      line.sort((a, b) => a.row - b.row) // sort from less to more\n      let newRow = 1;\n      return reduceTileLine(line).map((tile, i, arr) => {\n        tile.row = newRow;\n        if (arr[i + 1] && !arr[i + 1].shouldDelete) {   //tiles for deletion should have same col with new merged tile\n          newRow += 1;\n        } \n        return tile;\n      });\n    }\n    case 'down': {\n      line.sort((a, b) => b.row - a.row) // sort from more to less\n      let newRow = size;\n      return reduceTileLine(line).map((tile, i, arr) => {\n        tile.row = newRow;\n        if (arr[i + 1] && !arr[i + 1].shouldDelete) {   //tiles for deletion should have same col with new merged tile ( order [merged, shouldDelete, shouldDelete])\n          newRow -= 1;\n        } \n        return tile;\n      }).sort((a, b) => a.row - b.row);\n    }\n  }\n};\n\nconst getTileRowsToCollapse = (tileList: TileConfig[], length: GameSize): TileConfig[][] =>  (\n  Array.from( { length } ).map((_el, i) => tileList.filter(tile => tile.row === i + 1))\n);\n\nconst getTileColsToCollapse = (tileList: TileConfig[], length: GameSize): TileConfig[][] => (\n  Array.from( { length } ).map((_el, i) => tileList.filter(tile => tile.col === i + 1))\n);\n\n// main function\nexport const getCollapsedTileList = (\n  tileList: TileConfig[],\n  direction: CollapseDirection,\n  size: GameSize,\n) => {\n  const clearedTileList = tileList.filter(tile => !tile.shouldDelete )\n  clearedTileList.forEach(tile => { delete tile.appeared; delete tile.merged; });\n  switch (direction) {\n    case \"right\":\n    case \"left\":\n      const rows = getTileRowsToCollapse(clearedTileList, size);\n      const collapsedRows = rows.map((row) => getCollapsedTileLine(row, direction, size));\n      return collapsedRows.flat();\n    case \"up\":\n    case \"down\":\n      const cols = getTileColsToCollapse(clearedTileList, size);\n      const collapsedCols = cols.map((col) => getCollapsedTileLine(col, direction, size));\n      return collapsedCols.flat();\n  }\n};\n\n\nexport const calculateFontSize = (tile: TileConfig, tileWidth: number) => {\n  switch (tile.value) {\n    case 2:\n    case 4:\n    case 8:\n    case 16:\n    case 32:\n    case 64:\n      return tileWidth * 0.55;\n    case 128:\n    case 256:\n    case 512:\n      return tileWidth * 0.45;\n    case 1024:\n    case 2048:\n      return tileWidth * 0.35;\n  }\n}\n","import React from \"react\";\nimport { useSpring, animated } from 'react-spring';\nimport \"../App.scss\";\n\nimport { tileGap, TileProps, tileWidth } from \"../App.model\";\nimport { calculateFontSize } from \"../App.service\";\n\nconst Tile: React.FC<TileProps> = ({ tile, enterLeaveStyles }) => {\n \n  const fontSize = calculateFontSize(tile, tileWidth);\n\n  const styles = useSpring({\n      top: (tile.row - 1) * (tileWidth + tileGap) + tileGap,\n      left: (tile.col - 1) * (tileWidth + tileGap) + tileGap,\n      config: { duration: 150 },\n      height: tileWidth,\n      width: tileWidth,\n      fontSize,\n  });\n\n    return (\n    <animated.div\n      className={`Tile Value-${tile.value} ${tile.merged ? 'Merged' : ''}`}\n      style={{ \n        ...styles, \n        ...enterLeaveStyles, \n      }}\n    >\n      {tile.value}\n    </animated.div>\n  );\n};\n\nexport default Tile;\n","import React from \"react\";\nimport { Transition } from 'react-spring/renderprops';\nimport \"../App.scss\";\n\nimport { TileListProps } from \"../App.model\";\nimport Tile from \"./Tile\";\n\n\nconst TileList: React.FC<TileListProps> = ({ tileList: items }) => (\n  <div>\n    <Transition\n      items={items}\n      keys={items.map(item => item.key)}\n      from={(item) => { return item.merged ? { transform: 'scale(1)' } : { transform: 'scale(0)' }}}\n      enter={{ transform: 'scale(1)' }}\n      leave={{ transform: 'scale(0)' }}\n      config={{duration: 0}}\n    >\n      {tile => styles => (\n        <Tile key={tile.key} tile={tile} enterLeaveStyles={styles} />\n      )}\n    </Transition>\n  </div>\n)\n\nexport default TileList;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport useSound from 'use-sound';\nimport swishTiles from  '../assets/swish.mp3'\n\nimport { ControlsProps } from '../App.model';\n\nconst Controls: React.FC<ControlsProps> = ({ startNewGame, toggleMusic, musicConfig  }) => {\n\n  // const soundUrl = '/sounds/909-drums.mp3';\n\n  \n\n  return (\n    <div className=\"Controls\">\n      <div className=\"ButtonWrapper\">\n        <button className=\"Button IconWrapper\" onClick={() => toggleMusic()} title={musicConfig.title}>\n          <FontAwesomeIcon icon={['fas', musicConfig.icon]}/>\n        </button>   \n      </div>\n      <div className=\"ButtonWrapper\">\n        <button className=\"Button IconWrapper\" onClick={() => startNewGame()} title='New game (N)'>\n          <FontAwesomeIcon icon={['fas', 'gamepad']}/>\n        </button>\n        </div>\n      <div className=\"ButtonWrapper\">\n        <button className=\"Button IconWrapper\" onClick={() => toggleMusic()} title={musicConfig.title}>\n          <FontAwesomeIcon icon={['fas', 'cog']}/>\n        </button>   \n      </div>\n    </div>\n  );\n};\n\ninterface AudioCintrols {\n  pause?: boolean,\n  mute?: boolean,\n  volume?: number,\n}\n\n\nconst MusicButtons: React.FC = (props) => {\n\n\n\n  return (\n    <div className=\"Controls\">\n\n      {/* <button onClick={swish}>Swish!</button> */}\n    </div>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Controls","import React, { PropsWithChildren, useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n\nimport backgroundMusic from '../assets/bensound-dreams.mp3'\nimport swishSound from  '../assets/throw.mp3'\nimport { getCellMatrix, addRandomTiles as addRandomTiles, getCollapsedTileList } from '../App.service';\nimport {\n  defaultTilesToAddQuantity as quantity,\n  boardWidth,\n  CollapseDirection,\n  GameProps,\n  Keys,\n  TileConfig,\n  tileGap,\n  tileWidth,\n  MusicConfig,\n} from '../App.model';\nimport '../App.scss';\nimport TileList from './TileList';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Controls from './Controls';\n\n\nconst Game: React.FC<PropsWithChildren<GameProps>> = ({ size }) => {\n\n  const playMusicConfig: MusicConfig = {\n    musicOn: false,\n    icon: 'music',\n    title: 'Play music'\n  }\n\n  const stopMusicConfig: MusicConfig = {\n    musicOn: true,\n    icon: 'stop',\n    title: 'Play music'\n  }\n\n  const [ tileList, setTileList ] = useState([] as TileConfig[]);   // set tileList !!!\n  const [ play, { stop, sound, pause } ] = useSound(backgroundMusic);\n  const [ musicConfig, setMusicConfig ] = useState(playMusicConfig)\n\n  const cellMatrix = getCellMatrix(size)\n\n  const gamedGrid = Array.from({length: size}, ((_el, i)=> {\n    return (\n      <div key={`cell-row-${i+1}`} className='Row' style={{ height: tileWidth, marginBottom: tileGap }}>\n        {Array.from({ length: size }, ((_el, j) => (\n          <div key={`cell-col-${j+1}`} className='Cell' style={{ height: tileWidth, width: tileWidth, marginRight: tileGap }}></div>\n        )))}\n      </div>\n    );\n  }))\n\n  const [ swish ] = useSound(swishSound);\n\n\n  // срабатывает полсе каждого рендера, при условии что изменились зависимости ( ..., [ ...] )\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      const { code } = event\n      let sound = swish;\n      let direction: CollapseDirection = '' as CollapseDirection;\n      if (code === Keys.ArrowUp || code === Keys.KeyUp) {\n        direction = 'up';\n        sound = swish;\n      } else if  (code === Keys.ArrowDown || code === Keys.KeyDown) {\n        sound = swish;\n        direction = 'down';\n      }  else if  (code === Keys.ArrowRight || code === Keys.KeyRight) {\n        sound = swish;\n        direction = 'right';\n      } else if  (code === Keys.ArrowLeft || code === Keys.KeyLeft) {\n        sound = swish;\n        direction = 'left';\n      }\n      if (direction) {\n        sound()\n        const collapsedList = getCollapsedTileList(tileList, direction, size);\n        // setTileList(collapsedList)\n          const expandedList = addRandomTiles(cellMatrix, collapsedList, quantity);\n          setTileList(expandedList)\n\n\n        direction = '' as CollapseDirection;\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n    \n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    }\n  }, [tileList])\n\n  const gameWrapperStyle = {\n    height: boardWidth,\n    width: boardWidth,\n    padding: tileGap\n  }\n\n\n\n  const startNewGame = () => {\n    stop();\n    setMusicConfig(stopMusicConfig)\n    setTileList(addRandomTiles(cellMatrix, [], quantity))\n    play()\n    sound.fade(0,0.3,3000)\n  }\n\n  const toggleMusic = (config: MusicConfig) => {\n    // setMusicConfig(true)\n    if (config.musicOn) {\n      stop();\n      sound.fade(0.3,0,3000)\n      setMusicConfig(playMusicConfig)\n    } else {\n      play()\n      sound.fade(0,0.3,3000)\n      setMusicConfig(stopMusicConfig)\n    }\n\n    // sound.volume(0.3, bmId);\n    //   sound.pause(bmId);\n  }\n\n  return (\n    <div className='GameWrapper'>\n    \t<Controls startNewGame={startNewGame} toggleMusic={() => toggleMusic(musicConfig)} musicConfig={musicConfig}/>\n      <div className='BoardWrapper' style={gameWrapperStyle}>\n        <div className='GridWrapper'>{gamedGrid}</div>\n        <TileList tileList={tileList} />\n      </div>    \n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport { defaultSize } from './App.model';\nimport './App.scss';\nimport Game from './components/Game';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game size={defaultSize}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faCode,\n  faHighlighter,\n  faVolumeMute,\n  faGamepad,\n  faMusic,\n  faStop,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faCode,\n  faHighlighter,\n  faVolumeMute,\n  faGamepad,\n  faGithub,\n  faMusic,\n  faStop,\n  faCog\n);","import React from 'react';\n\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n      <h1 className=\"Title\">\n        2048\n      </h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className='Footer'>\n\t\t\t<div className=\"HrefWrapper\" title=\"Author\">\n\t\t\t\t<a href=\"https://github.com/GYegor\"  target=\"_blank\"> \n\t\t\t\t\t<p><FontAwesomeIcon className=\"FaIcon\"  icon={['fab', 'github']} /></p>\n\t\t\t\t\t<p>GYegor</p>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div className=\"HrefWrapper\" title=\"Rolling Scopes School\">\n\t\t\t\t<a href=\"https://rs.school/js/\"  target=\"_blank\">\n\t\t\t\t\t<img src=\"https://rs.school/images/rs_school_js.svg\" alt=\"RSSchool logo\"/>\n\t\t\t\t</a>\n\t\t\t</div>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './fontawesome'\nimport Header from './Header';\nimport Footer from './Footer';\n\n\nconst routing = (\n  <Router>\n    <div className=\"Main\">\n      <Header />\n      <App />\n      <div className=\"Spacer\"></div>\n      <Footer />\n    </div>\n  </Router>\n);\n\n\nReactDOM.render(routing,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}